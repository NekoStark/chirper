<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>it.unifi.ing</groupId>
		<artifactId>chirper</artifactId>
		<version>0.0.1-SNAPSHOT</version>
	</parent>
	<artifactId>chirper-services</artifactId>
	<packaging>war</packaging>

	<dependencies>
		<dependency>
			<groupId>it.unifi.ing</groupId>
			<artifactId>chirper-model</artifactId>
			<version>0.0.1-SNAPSHOT</version>
		</dependency>

		<dependency>
			<groupId>it.unifi.ing</groupId>
			<artifactId>chirper-test</artifactId>
			<version>0.0.1-SNAPSHOT</version>
			<scope>test</scope>
		</dependency>
		
		<dependency>
			<groupId>org.codehaus.groovy</groupId>
			<artifactId>groovy-all</artifactId>
			<version>2.4.5</version>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<artifactId>maven-war-plugin</artifactId>
				<version>2.3</version>
				<configuration>
					<failOnMissingWebXml>false</failOnMissingWebXml>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-antrun-plugin</artifactId>
				<version>1.8</version>
				<executions>
					<execution>
						<phase>pre-integration-test</phase>
						<goals>
							<goal>run</goal>
						</goals>
						<configuration>
							<tasks>
								<copy
									file="${project.build.directory}/${project.build.finalName}.war"
									tofile="${basedir}/docker/wildfly/${project.artifactId}.war" />
								<copy
									file="${basedir}/datasource/chirper-ds.xml"
									tofile="${basedir}/docker/wildfly/chirper-ds.xml" />
							</tasks>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>io.fabric8</groupId>
				<artifactId>docker-maven-plugin</artifactId>
				<version>0.17.2</version>
				<configuration>
					<images>
						<image>
							<name>mysqldb</name>
							<build>
								<dockerFileDir>${project.basedir}/docker/mysql</dockerFileDir>
							</build>
							<run>
								<ports>
									<port>3307:3306</port>
								</ports>
								<env>
									<MYSQL_ROOT_PASSWORD>root</MYSQL_ROOT_PASSWORD>
								</env>
								<wait>
									<time>50000</time>
									<log>mysqld: ready for connections</log>
								</wait>
							</run>
						</image>
						<image>
							<name>wildfly-test</name>
							<build>
								<dockerFileDir>${project.basedir}/docker/wildfly</dockerFileDir>
							</build>
							<run>
								<ports>
									<port>8080:8080</port>
								</ports>
								<dependsOn>mysqldb</dependsOn>
								<links>
									<link>mysqldb:database</link>
								</links>
								<cmd>
									<shell>./wait-for-it.sh -t 0 database:3306 --
										/opt/jboss/wildfly/bin/standalone.sh -b 0.0.0.0</shell>
								</cmd>
								<wait>
									<time>50000</time>
									<log>Deployed</log>
								</wait>
							</run>
						</image>
					</images>
					<showLogs>true</showLogs>
				</configuration>
				<executions>
					<execution>
						<id>docker:build</id>
						<phase>pre-integration-test</phase>
						<goals>
							<goal>build</goal>
						</goals>
					</execution>
					<execution>
						<id>docker:start</id>
						<phase>pre-integration-test</phase>
						<goals>
							<goal>start</goal>
						</goals>
					</execution>
					<execution>
						<id>docker:stop</id>
						<phase>post-integration-test</phase>
						<goals>
							<goal>stop</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
</project>